version: '2.27'

services:
  db:
    image: mysql:8.0
    container_name: "mysql_db"
    volumes:
      - db_data:/var/lib/mysql
      - db_backups:/backups
    restart: always
    labels:
      - "author=${AUTHOR}"
      - "project=${SLUG}"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"

  api:
    build:
      context: ./server
      dockerfile: Dockerfile.prod.prod
    container_name: "$dotnet_api"
    restart: always
    labels:
      - "author=${AUTHOR}"
      - "project=${SLUG}"
    ports:
      - "5282:5282"
    depends_on:
      - db
    environment:
      ConnectionStrings__DefaultConnection: "Host=db;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB};"
      ASPNETCORE_ENVIRONMENT: "Production"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: "nuxt_client"
    restart: always
    labels:
      - "author=${AUTHOR}"
      - "project=${SLUG}"
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      API_ADDRESS: "http://api:5282"
      HOST: "0.0.0.0"
      NODE_ENV: "production"

  backup:
    image: alpine
    container_name: "db_backup"
    volumes:
      - ./backup.sh/:/backup.sh
      - db_backups:/backups
    restart: always
    labels:
      - "author=${AUTHOR}"
      - "project=${SLUG}"
    entrypoint: "/bin/sh"
    command: "-c 'echo \"0 2 * * * /bin/sh /backup.sh\" | crontab - && crond -f -d 8'"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - db

volumes:
  db_data:
  db_backups:
